/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.npptmk.guiObjects;

import java.awt.Color;
import java.awt.Component;
import java.util.HashMap;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 * Диалог управления видимостью графиков на иконке {@code GraficsIcon}.
 *
 * @author MalginAS
 */
public class TubeVisibilityDialog extends javax.swing.JDialog implements TableModelListener{

    private final TubePnl icon;
    private DefaultTableModel tm;
    private boolean isSetup = true;

    /**
     * Диалог с стаблицей видимости графиков на иконке.
     *
     * @param icon иконка, чьими графиками нужно управлять.
     */
    public TubeVisibilityDialog(TubePnl icon) {
        super((java.awt.Frame) null, false);
        this.icon = icon;
        initComponents();
        tm = (DefaultTableModel) grafsTable.getModel();
        tm.addTableModelListener(this);
        grafsTable.getColumnModel().getColumn(1).setCellRenderer(new CellRenderer());
        Object[] data = new Object[2];
        for (int i = 0; i < icon.colors.length; i++) {
            TableData td = new TableData(icon.names[i], icon.colors[i], i);
            data[0] = icon.visibles[i];
            data[1] = td;
            tm.addRow(data);
        }
        setLocationRelativeTo(null);
        isSetup = false;
    }

    @Override
    public void tableChanged(TableModelEvent e) {
        if (isSetup){
            return;
        }
        int col = e.getColumn();
        int row = e.getFirstRow();
        if (row == -1 || col == -1){
            return;
        }
        Boolean vis = (Boolean) tm.getValueAt(row, col);
        TableData gr = (TableData) tm.getValueAt(row, 1);
        icon.visibles[gr.ind] = vis;
        icon.repaint();
    }

    private static class TableData {

        private String nm;
        private Color clr;
        private int ind;

        public TableData() {
        }

        private TableData(String name, Color color, int i) {
            this.nm = name;
            this.clr = color;
            ind = i;
        }
    }

    public class CellRenderer extends JLabel implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            TableData td = (TableData) value;
            setText(td.nm);
            setForeground(td.clr);
            setBackground(Color.WHITE);
            setOpaque(true);
            return this;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        grafsTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Видимость графиков");

        grafsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Вид.", "График"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grafsTable.setRowHeight(28);
        grafsTable.setRowSelectionAllowed(false);
        grafsTable.getTableHeader().setFont(new java.awt.Font("Segoe UI", 0, 18));
        grafsTable.setFont(new java.awt.Font("Segoe UI", 0, 18));
        jScrollPane1.setViewportView(grafsTable);
        if (grafsTable.getColumnModel().getColumnCount() > 0) {
            grafsTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Все вкл.");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("Все выкл.");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        for (int i=0; i<tm.getRowCount(); i++){
            tm.setValueAt(Boolean.TRUE, i, 0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        for (int i=0; i<tm.getRowCount(); i++){
            tm.setValueAt(Boolean.FALSE, i, 0);
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable grafsTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
