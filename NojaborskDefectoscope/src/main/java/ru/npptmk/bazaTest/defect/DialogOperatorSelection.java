/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.npptmk.bazaTest.defect;

import java.awt.Frame;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import ru.npptmk.bazaTest.defect.model.Operator;

/**
 *
 * @author RazumnovAA
 */
public class DialogOperatorSelection extends javax.swing.JDialog {

    private EntityManagerFactory emf;
    private Operator operator;
    
    /**
     * Creates new form OperatorChoiceDialog
     * @param emf
     * @param parent
     * @param modal
     */
    public DialogOperatorSelection(
            EntityManagerFactory emf,
            Frame parent,
            boolean modal) {
        super(parent, modal);
        this.emf = emf;
        initComponents();
        //Очищаем список операторов
        comboBox_Operators.removeAllItems();
        comboBox_Operators.addItem("Выберите оператора из списка");
        List<Operator> operators = getOperatorsLIst();
        if (operators != null && !operators.isEmpty()){
        operators.forEach((operator) -> {
            comboBox_Operators.addItem(operator);
        });
        }
        this.setLocationRelativeTo(null);
    }

    public Operator getOperator(){
        return (Operator)this.comboBox_Operators.getSelectedItem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBox_Operators = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        button_CreateNewOperator = new javax.swing.JButton();
        button_SelectOperator = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 100));
        setModal(true);
        setResizable(false);

        comboBox_Operators.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        comboBox_Operators.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("<HTML>Перед началом работы необходимо выбрать <BR>оператора из списка или создать нового.</HTML>");

        button_CreateNewOperator.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        button_CreateNewOperator.setText("Создать нового оператора");
        button_CreateNewOperator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_CreateNewOperatorActionPerformed(evt);
            }
        });

        button_SelectOperator.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        button_SelectOperator.setText("Выбрать оператора");
        button_SelectOperator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_SelectOperatorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(comboBox_Operators, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(button_SelectOperator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(button_CreateNewOperator)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboBox_Operators, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_CreateNewOperator)
                    .addComponent(button_SelectOperator))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_CreateNewOperatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_CreateNewOperatorActionPerformed
        DialogOperatorCreation operatorCreationDialog = new DialogOperatorCreation(null, true);
        operatorCreationDialog.setEntityManager(emf);
        operatorCreationDialog.setVisible(true);
        //Очищаем список операторов
        comboBox_Operators.removeAllItems();
        comboBox_Operators.addItem("Выберите оператора из списка");
        List<Operator> operators = getOperatorsLIst();
        operators.forEach((operator) -> {
            comboBox_Operators.addItem(operator);
        });
    }//GEN-LAST:event_button_CreateNewOperatorActionPerformed
    private List<Operator> getOperatorsLIst(){
        EntityManager em = emf.createEntityManager();
        List<Operator> operators = new ArrayList<>();
        try{
           operators =  em.createQuery("SELECT a FROM Operator a").getResultList();
        }catch(Exception ex){
            ex.printStackTrace();
        }finally{
            if(em != null) em.close();
        }
        return operators; 
    }
    private void button_SelectOperatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_SelectOperatorActionPerformed
        if (comboBox_Operators.getSelectedItem() instanceof String){
            return;
        }
        operator = (Operator) comboBox_Operators.getSelectedItem();
        this.setVisible(false);
        
    }//GEN-LAST:event_button_SelectOperatorActionPerformed

    /**
     * @param args the command line arguments
     */


    public void setEntityManager(EntityManagerFactory emf) {
        this.emf = emf;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_CreateNewOperator;
    private javax.swing.JButton button_SelectOperator;
    private javax.swing.JComboBox<Object> comboBox_Operators;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
