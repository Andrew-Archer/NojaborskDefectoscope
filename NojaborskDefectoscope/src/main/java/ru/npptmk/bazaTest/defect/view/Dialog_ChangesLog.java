/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.npptmk.bazaTest.defect.view;

import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.swing.table.DefaultTableModel;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import ru.npptmk.bazaTest.defect.model.SettingChange;
import ru.npptmk.bazaTest.defect.model.SettingsChangeEvent;

/**
 *
 * @author razumnov
 */
public class Dialog_ChangesLog extends javax.swing.JDialog {
    private static final Font TABLE_FONT = new Font("Dialog", 0, 18);
    private final int pageSize = 10;
    private int currentPage = 0;
    private long totalPages = 0;
    private long totalRecords = 0;
    private static final SimpleDateFormat sdf = new SimpleDateFormat("yyyy-mm-dd hh:mm:ss");

    private static final Logger LOG = LoggerFactory.getLogger(Dialog_ChangesLog.class);

    private final EntityManagerFactory emf;
    private List<SettingsChangeEvent> currentPageData;

    /**
     * Creates new form Dialog_ChangesLog
     */
    public Dialog_ChangesLog(java.awt.Frame parent, boolean modal, EntityManagerFactory emf) {
        super(parent, modal);
        this.emf = emf;
        initComponents();
        jTable_settingChangeEvents.getSelectionModel().addListSelectionListener((e) -> {
            int firsSelectedIndex = jTable_settingChangeEvents.getSelectedRow();
            if (firsSelectedIndex != -1 && currentPageData != null) {
                printSettingChanges(currentPageData.get(firsSelectedIndex)
                        .getSettingsChanges());
            } else {
                ((DefaultTableModel) jTable_settingChanges.getModel()).getDataVector().clear();
                ((DefaultTableModel) jTable_settingChanges.getModel()).fireTableDataChanged();
            }
        });
    }

    private void printSettingChanges(List<SettingChange> settingChanges) {
        DefaultTableModel dtm = ((DefaultTableModel) jTable_settingChanges.getModel());
        dtm.getDataVector().removeAllElements();
        dtm.fireTableDataChanged();
        settingChanges.forEach((t) -> {
            dtm.addRow(new Object[]{
                t.getParamGroup(),
                t.getParamName(),
                t.getOldValue(),
                t.getNewValue()});
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_settingChanges = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_settingChangeEvents = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jButton_Load = new javax.swing.JButton();
        jButton_firstPage = new javax.swing.JButton();
        jButton_previousPage = new javax.swing.JButton();
        jLabel_pagination = new javax.swing.JLabel();
        jButton_nextPage = new javax.swing.JButton();
        jButton_lastPage = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        table_DatePicker = new ru.npptmk.bazaTest.defect.TableDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ЖУРНАЛ ИЗМЕНЕНИЙ НАСТРОЕК");

        jTable_settingChanges.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Тип", "Имя параметра", "Было", "Стало"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable_settingChanges);
        if (jTable_settingChanges.getColumnModel().getColumnCount() > 0) {
            jTable_settingChanges.getColumnModel().getColumn(0).setPreferredWidth(120);
            jTable_settingChanges.getColumnModel().getColumn(1).setPreferredWidth(396);
            jTable_settingChanges.getColumnModel().getColumn(2).setPreferredWidth(70);
            jTable_settingChanges.getColumnModel().getColumn(3).setPreferredWidth(70);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jTable_settingChangeEvents.setFont(TABLE_FONT);
        jTable_settingChangeEvents.getTableHeader().setFont(TABLE_FONT);
        jTable_settingChangeEvents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Автор", "Дата"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_settingChangeEvents.setRowHeight(28);
        jScrollPane1.setViewportView(jTable_settingChangeEvents);
        if (jTable_settingChangeEvents.getColumnModel().getColumnCount() > 0) {
            jTable_settingChangeEvents.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable_settingChangeEvents.getColumnModel().getColumn(1).setPreferredWidth(280);
            jTable_settingChangeEvents.getColumnModel().getColumn(2).setPreferredWidth(154);
        }

        jButton_Load.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton_Load.setText("Загрузить");
        jButton_Load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LoadActionPerformed(evt);
            }
        });

        jButton_firstPage.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton_firstPage.setText("<<");
        jButton_firstPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_firstPageActionPerformed(evt);
            }
        });

        jButton_previousPage.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton_previousPage.setText("<");
        jButton_previousPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_previousPageActionPerformed(evt);
            }
        });

        jLabel_pagination.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jButton_nextPage.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton_nextPage.setText(">");
        jButton_nextPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_nextPageActionPerformed(evt);
            }
        });

        jButton_lastPage.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton_lastPage.setText(">>");
        jButton_lastPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_lastPageActionPerformed(evt);
            }
        });

        table_DatePicker.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        table_DatePicker.getTableHeader().setFont(TABLE_FONT);
        table_DatePicker.setRowHeight(28);
        table_DatePicker.setRowSelectionAllowed(false);
        jScrollPane6.setViewportView(table_DatePicker);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("Период изменений:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jButton_firstPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_previousPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_pagination, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_nextPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_lastPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_Load))
            .addComponent(jScrollPane6)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_pagination, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton_Load)
                        .addComponent(jButton_firstPage)
                        .addComponent(jButton_previousPage)
                        .addComponent(jButton_nextPage)
                        .addComponent(jButton_lastPage))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
            .addComponent(jSeparator2)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void printPagination(long currentPage, long totalPages) {
        jLabel_pagination.setText(String.format("%d из %d", currentPage, totalPages));
    }
    private void jButton_LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadActionPerformed
        ((DefaultTableModel) jTable_settingChangeEvents.getModel()).getDataVector().removeAllElements();
        ((DefaultTableModel) jTable_settingChanges.getModel()).fireTableDataChanged();
        totalRecords = coutAllEvents();
        setCurrentPage(1);
        totalPages = totalRecords / pageSize + (totalRecords % pageSize > 0 ? 1 : 0);
        printPagination(currentPage, totalPages);
        printChangesEvents(loadDataForPage(1));

    }//GEN-LAST:event_jButton_LoadActionPerformed
    private void printChangesEvents(List<SettingsChangeEvent> settingsChangeEvents) {
        ((DefaultTableModel) jTable_settingChangeEvents.getModel()).getDataVector().removeAllElements();
        ((DefaultTableModel) jTable_settingChanges.getModel()).fireTableDataChanged();
        if (settingsChangeEvents != null) {
            DefaultTableModel dtm = (DefaultTableModel) jTable_settingChangeEvents.getModel();
            settingsChangeEvents.forEach((sce) -> {
                dtm.addRow(new Object[]{sce.getId(), sce.getAuthor().toString(), sdf.format(sce.getEventDate())});
            });
        }
    }

    private void setCurrentPage(int index) {
        currentPage = index;
        if (currentPage == 1) {
            jButton_firstPage.setEnabled(false);
            jButton_previousPage.setEnabled(false);
            jButton_lastPage.setEnabled(true);
            jButton_nextPage.setEnabled(true);
            return;
        }
        if (currentPage >= totalPages) {
            jButton_firstPage.setEnabled(true);
            jButton_previousPage.setEnabled(true);
            jButton_lastPage.setEnabled(false);
            jButton_nextPage.setEnabled(false);
            return;
        }
        jButton_firstPage.setEnabled(true);
        jButton_previousPage.setEnabled(true);
        jButton_lastPage.setEnabled(true);
        jButton_nextPage.setEnabled(true);
    }

    private List<SettingsChangeEvent> loadDataForPage(int pageNumber) {
        currentPageData = null;
        EntityManager em = emf.createEntityManager();
        EntityTransaction tx = null;
        List<SettingsChangeEvent> settingsChangeEvents = null;
        try {
            tx = em.getTransaction();
            tx.begin();
            settingsChangeEvents = em.createNamedQuery("loadAll", SettingsChangeEvent.class)
                    .setFirstResult((pageNumber - 1) * pageSize)
                    .setMaxResults(pageSize)
                    .getResultList();
            tx.commit();
        } catch (Exception ex) {
            if (tx != null && tx.isActive()) {
                tx.rollback();
            }
            LOG.error("Can't load settings change events", ex);
        } finally {
            if (em != null) {
                em.close();
            }
        }
        currentPageData = settingsChangeEvents;
        return settingsChangeEvents;
    }
    private void jButton_lastPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_lastPageActionPerformed
        jTable_settingChangeEvents.getSelectionModel().clearSelection();
        List<SettingsChangeEvent> events = loadDataForPage((int) totalPages);
        if (events != null) {
            setCurrentPage((int) totalPages);
            printPagination(currentPage, totalPages);
            printChangesEvents(events);
        }
    }//GEN-LAST:event_jButton_lastPageActionPerformed

    private void jButton_nextPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_nextPageActionPerformed
        jTable_settingChangeEvents.getSelectionModel().clearSelection();
        int nextPageNumber = currentPage + 1;
        if (nextPageNumber <= totalPages) {
            List<SettingsChangeEvent> events = loadDataForPage(currentPage + 1);
            if (events != null) {
                setCurrentPage(++currentPage);
                printPagination(currentPage, totalPages);
                printChangesEvents(events);
            }
        }
    }//GEN-LAST:event_jButton_nextPageActionPerformed

    private void jButton_previousPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_previousPageActionPerformed
        jTable_settingChangeEvents.getSelectionModel().clearSelection();
        int nextPageNumber = currentPage - 1;
        if (nextPageNumber > 0) {
            List<SettingsChangeEvent> events = loadDataForPage(currentPage - 1);
            if (events != null) {
                setCurrentPage(--currentPage);
                printPagination(currentPage, totalPages);
                printChangesEvents(events);
            }
        }
    }//GEN-LAST:event_jButton_previousPageActionPerformed

    private void jButton_firstPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_firstPageActionPerformed
        jTable_settingChangeEvents.getSelectionModel().clearSelection();
        List<SettingsChangeEvent> events = loadDataForPage(1);
        if (events != null) {
            setCurrentPage(1);
            printPagination(currentPage, totalPages);
            printChangesEvents(events);
        }
    }//GEN-LAST:event_jButton_firstPageActionPerformed

    private long coutAllEvents() {
        EntityManager em = emf.createEntityManager();
        EntityTransaction tx = null;
        long result = 0;
        try {
            tx = em.getTransaction();
            tx.begin();
            result = (long) em.createNamedQuery("count").getSingleResult();
            tx.commit();
        } catch (Exception ex) {
            if (tx != null && tx.isActive()) {
                tx.rollback();
            }
            LOG.error("Can't load settings change events", ex);
        } finally {
            if (em != null) {
                em.close();
            }
        }
        return result;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Load;
    private javax.swing.JButton jButton_firstPage;
    private javax.swing.JButton jButton_lastPage;
    private javax.swing.JButton jButton_nextPage;
    private javax.swing.JButton jButton_previousPage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_pagination;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable_settingChangeEvents;
    private javax.swing.JTable jTable_settingChanges;
    private ru.npptmk.bazaTest.defect.TableDatePicker table_DatePicker;
    // End of variables declaration//GEN-END:variables
}
