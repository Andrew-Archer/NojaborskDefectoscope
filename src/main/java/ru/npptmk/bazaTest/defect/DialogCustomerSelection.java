/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.npptmk.bazaTest.defect;

import java.awt.Frame;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import ru.npptmk.bazaTest.defect.model.Customer;

/**
 *
 * @author RazumnovAA
 */
public class DialogCustomerSelection extends javax.swing.JDialog {

    private final EntityManagerFactory emf;

    /**
     * Creates new form DialogCustomerSelection
     */
    public DialogCustomerSelection(
            Frame parent,
            boolean modal,
            EntityManagerFactory emf) {
        super(parent, modal);
        this.emf = emf;
        initComponents();
        updateCustomersList();
        dialogCustomerCreation = new DialogCustomerCreation(parent, modal, emf);
    }

    private final DialogCustomerCreation dialogCustomerCreation;

    public List<Object> getCustomers() {
        List<Object> customers = new ArrayList<>();
        for (int i = 0; i < comboBox_CustomersList.getItemCount(); i++) {
            customers.add(comboBox_CustomersList.getItemAt(i));
        }
        return customers;
    }

    public Object getSelectedCustomer() {
        return comboBox_CustomersList.getSelectedItem();
    }

    private void updateCustomersList() {
        synchronized (this) {
            //Очищаем список элементов
            comboBox_CustomersList.removeAllItems();

            //Добавляем элемент предлагающий выбрать заказчика
            comboBox_CustomersList.addItem("Выберите заказчика");

            //Получаем список заказчиков из базы
            EntityManager em = emf.createEntityManager();
            List<Customer> customers = new ArrayList<>();
            try {
                customers = em.createQuery("SELECT a FROM Customer a")
                        .getResultList();
            } catch (Exception ex) {
                ex.printStackTrace();
            } finally {
                if (em != null) {
                    em.close();
                }
            }
            //Заполняем список заказчиков
            for (int i = 0; i < customers.size(); i++) {
                comboBox_CustomersList.insertItemAt(customers.get(i), i);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button_ChooseCustomer = new javax.swing.JButton();
        button_CreateNewCustomer = new javax.swing.JButton();
        label_DialogMessage = new javax.swing.JLabel();
        comboBox_CustomersList = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Выбор заказчика УНТК-500");
        setMaximumSize(new java.awt.Dimension(421, 220));
        setMinimumSize(new java.awt.Dimension(421, 220));
        setPreferredSize(new java.awt.Dimension(421, 220));
        setResizable(false);

        button_ChooseCustomer.setText("Выбрать и закрыть");
        button_ChooseCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_ChooseCustomerActionPerformed(evt);
            }
        });

        button_CreateNewCustomer.setText("Создать нового");
        button_CreateNewCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_CreateNewCustomerActionPerformed(evt);
            }
        });

        label_DialogMessage.setText("<html><p> Выбирете заказчика, так как проверка продукции осуществляется с привязкой каждой трубы к конкретному заказчику.</p><p> Если вы не выбирете заказчика, то работа установки будет не возможна.</p></html>");

        comboBox_CustomersList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 114, Short.MAX_VALUE)
                        .addComponent(button_CreateNewCustomer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(button_ChooseCustomer))
                    .addComponent(label_DialogMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(comboBox_CustomersList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_DialogMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboBox_CustomersList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_ChooseCustomer)
                    .addComponent(button_CreateNewCustomer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_CreateNewCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_CreateNewCustomerActionPerformed
        dialogCustomerCreation.setVisible(true);
        updateCustomersList();
    }//GEN-LAST:event_button_CreateNewCustomerActionPerformed

    private void button_ChooseCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_ChooseCustomerActionPerformed
        if (comboBox_CustomersList.getSelectedItem() instanceof Customer) {
            this.setVisible(false);
        }
    }//GEN-LAST:event_button_ChooseCustomerActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_ChooseCustomer;
    private javax.swing.JButton button_CreateNewCustomer;
    private javax.swing.JComboBox<Object> comboBox_CustomersList;
    private javax.swing.JLabel label_DialogMessage;
    // End of variables declaration//GEN-END:variables
}
