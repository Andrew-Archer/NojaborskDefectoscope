/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.npptmk.bazaTest.defect;

import java.awt.Color;
import java.awt.Component;
import java.util.Arrays;
import javax.swing.DefaultListModel;
import javax.swing.JColorChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import ru.npptmk.devices.USKUdp.DeviceUSKUdp;
import ru.npptmk.devices.USKUdp.DeviceUSKUdpParam;
import ru.npptmk.guiObjects.GraphicsPnlTlsParams;

/**
 * Диалог для редактирования параметров панели отображения графиков
 * дефектоскопии.
 *
 * @author MalginAS
 */
public class GraphicsPnlTlsParamDialog extends javax.swing.JDialog implements ListSelectionListener {

    private final GraphicsPnlTlsParams par;
    private final DefaultListModel<ListGrItem> mod = new DefaultListModel<>();
    private final DeviceUSKUdp usk1;
    private final DeviceUSKUdp usk2;
    private final String oldName;
    private final String[] oldNames;
    private final int[] oldChans;
    private final long[] oldUnits;
    private final Color[] oldColors;
    public boolean okButton;

    /**
     * Конструктор диалога.
     *
     * @param par Редактируемые параметры.
     * @param usk1 Драйвер
     * @param usk2
     */
    public GraphicsPnlTlsParamDialog(GraphicsPnlTlsParams par, DeviceUSKUdp usk1, DeviceUSKUdp usk2) {
        super((java.awt.Frame) null, true);
        this.par = par;
        this.usk1 = usk1;
        this.usk2 = usk2;
        oldName = par.name;
        oldNames = Arrays.copyOf(par.names, par.names.length);
        oldColors = Arrays.copyOf(par.colors, par.colors.length);
        oldUnits = Arrays.copyOf(par.devIds, par.devIds.length);
        oldChans = Arrays.copyOf(par.chanIds, par.chanIds.length);
        initComponents();
        edName.setText(par.name);
        lsGrafs.setCellRenderer(new CellRenderer());
        lsGrafs.addListSelectionListener(this);
        for (int i = 0; i < par.names.length; i++) {
            mod.addElement(new ListGrItem(par.names[i], par.colors[i]));
        }
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        if (!e.getValueIsAdjusting()) {
            int[] sel = lsGrafs.getSelectedIndices();
            if (sel.length == 0) {
                btRemove.setEnabled(false);
                btColor.setEnabled(false);
                return;
            }
            btRemove.setEnabled(true);
            btColor.setEnabled(true);
        }
    }

    public class CellRenderer extends JLabel implements ListCellRenderer<ListGrItem> {

        @Override
        public Component getListCellRendererComponent(JList<? extends ListGrItem> list, ListGrItem value, int index, boolean isSelected, boolean cellHasFocus) {
            setText(value.name);
            setForeground(value.color);
            if (isSelected) {
                setBackground(Color.BLUE);
            } else {
                setBackground(Color.WHITE);
            }
            setOpaque(true);
            return this;
        }
    }

    public class ListGrItem {

        String name;
        Color color;

        public ListGrItem(String name, Color color) {
            this.name = name;
            this.color = color;
        }

        @Override
        public String toString() {
            return name; //To change body of generated methods, choose Tools | Templates.
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lsGrafs = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        edName = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        btRemove = new javax.swing.JButton();
        btColor = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lsGrafs.setModel(mod);
        lsGrafs.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lsGrafs);

        jLabel1.setText("Название:");

        edName.setText("jTextField1");

        btAdd.setText("Добавить");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btRemove.setText("Удалить");
        btRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveActionPerformed(evt);
            }
        });

        btColor.setText("Цвет");
        btColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btColorActionPerformed(evt);
            }
        });

        jButton4.setText("Сохранить");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Закрыть");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(edName)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(edName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btColor)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btColorActionPerformed
        int i = lsGrafs.getSelectedIndex();
        if (i == -1) {
            return;
        }
        Color newCol = JColorChooser.showDialog(null, "Выберите цвет канала", par.colors[i]);
        if (newCol != null) {
            par.colors[i] = newCol;
            mod.setElementAt(new ListGrItem(par.names[i], newCol), i);
        }
    }//GEN-LAST:event_btColorActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        par.name = edName.getText();
        okButton = true;
        setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        String[] units = {"УЗК1", "УЗК2"};
        String unit = (String) JOptionPane.showInputDialog(null, "Укажите нужную установку",
                "Выбор установки", JOptionPane.QUESTION_MESSAGE, null, units,
                units[0]);
        if (unit == null) {
            return;
        }
        String[] chans;
        int cchan;
        long idUnit = 0l;
        switch (unit) {
            case "УЗК1":
                cchan = 0;
                for (int i = 0; i < 8; i++) {
                    if (usk1.getParams().prms[i].getHardware_type() == DeviceUSKUdpParam.TIME_CONTROL) {
                        cchan++;
                    }
                }
                chans = new String[cchan];
                int j = 0;
                for (int i = 0; i < 8; i++) {
                    if (usk1.getParams().prms[i].getHardware_type() == DeviceUSKUdpParam.TIME_CONTROL) {
                        chans[j++] = "Канал " + (i + 1);
                    }
                }
                idUnit = Devicess.ID_USK1;
                break;
            case "УЗК2":
                cchan = 0;
                for (int i = 0; i < 8; i++) {
                    if (usk2.getParams().prms[i].getHardware_type() == DeviceUSKUdpParam.TIME_CONTROL) {
                        cchan++;
                    }
                }
                chans = new String[cchan];
                j = 0;
                for (int i = 0; i < 8; i++) {
                    if (usk2.getParams().prms[i].getHardware_type() == DeviceUSKUdpParam.TIME_CONTROL) {
                        chans[j++] = "Канал " + (i + 1);
                    }
                }
                idUnit = Devicess.ID_USK2;
                break;
            default:
                return;
        }
        if (cchan == 0) {
            JOptionPane.showMessageDialog(null, "В указанной установке нет каналов толщтнометрии", "Ошибка", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String chan = (String) JOptionPane.showInputDialog(null, "Укажите нужный канал",
                "Выбор канала", JOptionPane.QUESTION_MESSAGE, null, chans,
                chans[0]);
        if (chan == null) {
            return;
        }
        int idChan = Integer.parseInt(chan.substring(6)) - 1;
        int i = par.names.length;
        par.names = Arrays.copyOf(par.names, i + 1);
        par.names[i] = unit + " " + chan;
        par.chanIds = Arrays.copyOf(par.chanIds, i + 1);
        par.chanIds[i] = idChan;
        par.devIds = Arrays.copyOf(par.devIds, i + 1);
        par.devIds[i] = idUnit;
        par.colors = Arrays.copyOf(par.colors, i + 1);
        par.colors[i] = Color.BLACK;
        mod.addElement(new ListGrItem(par.names[i], par.colors[i]));
    }//GEN-LAST:event_btAddActionPerformed

    private void btRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveActionPerformed
        int i = lsGrafs.getSelectedIndex();
        if (i == -1) {
            return;
        }
        mod.remove(i);
        for (int j = i; j < par.names.length - 1; j++) {
            par.names[j] = par.names[j + 1];
            par.devIds[j] = par.devIds[j + 1];
            par.chanIds[j] = par.chanIds[j + 1];
            par.colors[j] = par.colors[j + 1];
        }
        i = par.names.length - 1;
        par.names = Arrays.copyOf(par.names, i);
        par.devIds = Arrays.copyOf(par.devIds, i);
        par.chanIds = Arrays.copyOf(par.chanIds, i);
        par.colors = Arrays.copyOf(par.colors, i);
    }//GEN-LAST:event_btRemoveActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        par.name = oldName;
        par.names = oldNames;
        par.colors = oldColors;
        par.devIds = oldUnits;
        par.chanIds = oldChans;
        okButton = false;
        setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btColor;
    private javax.swing.JButton btRemove;
    private javax.swing.JTextField edName;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lsGrafs;
    // End of variables declaration//GEN-END:variables
}
